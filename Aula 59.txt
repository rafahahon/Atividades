#include <Arduino.h>
#include <BluetoothSerial.h>

#define pinLed 2

BluetoothSerial SerialBT;

// esp slave

void setup()
{
  pinMode(pinLed, OUTPUT);

  Serial.begin(9600);

  if (!SerialBT.begin("SlaveRafa"), false)
  {
    Serial.println("Erro ao iniciar bluetooth com slave");
  }
}

void loop()
{
  static bool estadoLed = false;
  static bool piscaLed = false;
  static unsigned long tempo = 300;

  // * ENVIAR MENSAGEM

  if (Serial.available()) // se tiver algo disponivel na serial
  {
    String comandoEnviar = Serial.readStringUntil('\n'); // vai ler a mensagem disponivel e salvar na variavel string
    comandoEnviar.trim();                                // retira espacos
    SerialBT.println(comandoEnviar);                     // envia a mensagem para o esp parceiro
  }

  // * RECEBER MENSAGEM

  if (SerialBT.available()) // se tiver algo disponivel na serial do bluetooth
  {
    String comandoReceber = SerialBT.readStringUntil('\n');    // vai ler a mensagem disponivel e salvar na variavel string
    comandoReceber.trim();                                     // retira espacos
    Serial.printf("Comando recebido: %s\n\r", comandoReceber); // exibe a mensagem

    if (comandoReceber.equals("liga"))
    {
      piscaLed = false;
      estadoLed = true;
    }
    else if (comandoReceber.equals("desliga"))
    {
      piscaLed = false;
      estadoLed = false;
    }
    else if (comandoReceber.equals("pisca"))
    {
      piscaLed = true;
    }
    else if (comandoReceber.equals("mais rapido") && piscaLed == true)
    {
      tempo -= 50;
      if (tempo < 50)
      {
        tempo = 50;
        Serial.println("Velocidade maxima atingida");
      }
    }
    else if (comandoReceber.equals("mais lento") && piscaLed == true)
    {
      tempo += 50;
      if (tempo > 1000)
      {
        tempo = 1000;
        Serial.println("Velocidade minima atingida");
      }
    }
    else if (comandoReceber.startsWith("velocidade ="))
    {
      int tamanho = comandoReceber.length();
      String extracao = comandoReceber.substring(13, tamanho);
      int valorVelocidade = extracao.toInt();

      if (valorVelocidade >= 0 && valorVelocidade <= 100)
        tempo = map(valorVelocidade, 0, 100, 1000, 50);
      else
        Serial.println("Apenas valores entre 0 e 100");
    }
    else
    {
      Serial.println("Comando nao reconhecido");
    }
  }

  unsigned long tempoAtual = millis();
  static unsigned long tempoInicial = 0;

  if (piscaLed)
  {
    if (tempoAtual - tempoInicial > tempo)
    {
      estadoLed = !estadoLed;
      tempoInicial = tempoAtual;
    }
  }

  digitalWrite(pinLed, estadoLed);
}
