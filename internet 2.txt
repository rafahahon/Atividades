#include <Arduino.h>
#include <PubSubClient.h>
#include <WiFi.h>
#include "internet.h"

#define pinLed 2

WiFiClient espClient;
PubSubClient client(espClient);

const char *mqtt_server = "broker.hivemq.com";
const int mqtt_port = 1883;
const char *mqtt_id = "esp32-senai134-hahon";
const char *mqtt_topic_sub = "senai134/mesa01/esp_inscrito"; // ouvindo
const char*mqtt_topic_pub = "senai134/mesa01/esp_publicando"; // publicando

bool estadoLed = false;
bool modoPisca = false;

void callback(char *, byte *, unsigned int);
void mqttConnect(void);
void controleLed();

void setup() 
{
  Serial.begin(9600);
  pinMode(pinLed, OUTPUT);
  conectaWiFi();

  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
}

void loop() 
{
  checkWiFi();

  if(!client.connected())
    mqttConnect();

  client.loop();

  static unsigned long tempoAnterior = 0;
  unsigned long tempoAtual = millis();

  if(tempoAtual - tempoAnterior > 3000)
  {
    client.publish(mqtt_topic_pub, "Ola Mundo");
    tempoAnterior = tempoAtual;
  }

  controleLed();

}


void callback(char *topic, byte *payload, unsigned int lenght) // recebe e decodifica a mensagem
{
  Serial.printf("mensagem recebida em %s: ", topic);

  String mensagem = "";
  for(unsigned int i = 0; i < lenght; i++)
  {
    char c = (char)payload[i];
    mensagem += c;
  }

  Serial.println(mensagem);

  mensagem.trim();
  mensagem.toLowerCase();

  if(mensagem == "liga")
  {
    estadoLed = true;
    modoPisca = false;
  }

  else if(mensagem == "desliga")
  {
    estadoLed = false;
    modoPisca = false;
  }

  else if(mensagem == "pisca")
  {
    estadoLed = false;
    modoPisca = true;
  }

  else
  {
    Serial.println("Comando nao reconhecido");
  }

  digitalWrite(pinLed, estadoLed);

}

void mqttConnect()
{
  while(!client.connected())
  {
    Serial.println("Conectando ao MQTT...");

    if(client.connect(mqtt_id))
    {
      Serial.println("Conectado com sucesso");
      client.subscribe(mqtt_topic_sub);
    }

    else
    {
      Serial.print("Falha, rc = ");
      Serial.println(client.state());
      Serial.println("Tentando novamente em 5 segundos.");
      delay(5000);
    }
  }
}

void controleLed()
{
  static unsigned long ultimaMudanca = 0;
  unsigned long agora = millis();

  if(modoPisca)
  {
    if(agora - ultimaMudanca > 500)
    {
      estadoLed = !estadoLed;
      ultimaMudanca = agora;
    }
  }

  digitalWrite(pinLed, estadoLed);
}